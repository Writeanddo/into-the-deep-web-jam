[gd_scene load_steps=20 format=2]

[ext_resource path="res://sprites/desktop/textures/Regular.png" type="Texture" id=1]
[ext_resource path="res://sprites/desktop/textures/Inverted.png" type="Texture" id=2]
[ext_resource path="res://fonts/JonWorldCompressed.tres" type="DynamicFont" id=3]
[ext_resource path="res://sprites/desktop/icons/flag/FlagEmpty.png" type="Texture" id=4]
[ext_resource path="res://sprites/desktop/icons/flag/WindowsFlag.png" type="Texture" id=5]
[ext_resource path="res://src/battle/battle_window/BattleWindow.tscn" type="PackedScene" id=6]
[ext_resource path="res://src/desktop/Desktop.gd" type="Script" id=7]
[ext_resource path="res://src/desktop/RewardWindow.tscn" type="PackedScene" id=9]
[ext_resource path="res://src/desktop/states/DesktopStateSetup.gd" type="Script" id=10]
[ext_resource path="res://src/desktop/states/DesktopStateBattle.gd" type="Script" id=11]
[ext_resource path="res://src/desktop/states/DesktopStateReward.gd" type="Script" id=12]
[ext_resource path="res://src/desktop/states/DesktopStateStory.gd" type="Script" id=13]

[sub_resource type="Shader" id=1]
code = "// cloudy skies shader
// inspired from shadertoy shader made by Drift (https://www.shadertoy.com/view/4tdSWr) 

shader_type canvas_item;

uniform float cloudscale = 1.1;
uniform float speed = 0.01;
uniform float clouddark = 0.5;
uniform float cloudlight = 0.3;
uniform float cloudcover = 0.2;
uniform float cloudalpha = 8.0;
uniform float skytint = 0.5;
uniform vec3 skycolour1 = vec3(0.2, 0.4, 0.6);
uniform vec3 skycolour2 = vec3(0.4, 0.7, 1.0);
uniform mat2 m = mat2(vec2(1.6,1.2),vec2(-1.2,1.6)); // changement

// functions

vec2 hash( vec2 p ) {
                p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));
                return -1.0 + 2.0*fract(sin(p)*43758.5453123);
}

float noise( in vec2 p ) {
    float K1 = 0.366025404; // (sqrt(3)-1)/2;
    float K2 = 0.211324865; // (3-sqrt(3))/6;
                vec2 i = floor(p + (p.x+p.y)*K1); 
    vec2 a = p - i + (i.x+i.y)*K2;
    vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0); //vec2 of = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));
    vec2 b = a - o + K2;
                vec2 c = a - 1.0 + 2.0*K2;
    vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );
                vec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));
    return dot(n, vec3(70.0));       
}

float fbm(vec2 n) {
                float total = 0.0, amplitude = 0.1;
                for (int i = 0; i < 7; i++) {
                               total += noise(n) * amplitude;
                               n = m * n;
                               amplitude *= 0.4;
                }
                return total;
}

// fragment shader

void fragment() {
vec2 res = 1.0 / SCREEN_PIXEL_SIZE;
vec2 p = FRAGCOORD.xy / res.xy; // changement
                vec2 uv = p*vec2(res.x/res.y,1.0);    // changement
    float time = TIME * speed ;
    float q = fbm(uv * cloudscale * 0.5);
    
    //ridged noise shape
                float r = 0.0;
                uv *= cloudscale;
    uv += q - time;
    float weight = 0.8;
    for (int i=0; i<8; i++){
                               r += abs(weight*noise( uv ));
        uv = m*uv + time;
                               weight *= 0.7;
    }
    
    //noise shape
                float f = 0.0;
    uv = p*vec2(res.x/res.y,1.0); // changement
                uv *= cloudscale;
    uv += q - time;
    weight = 0.7;
    for (int i=0; i<8; i++){
                               f += weight*noise( uv );
        uv = m*uv + time;
                               weight *= 0.6;
    }
    
    f *= r + f;
    
    //noise colour
    float c = 0.0;
    time = TIME * speed * 2.0;
    uv = p*vec2(res.x/res.y,1.0); // changement
                uv *= cloudscale*2.0;
    uv += q - time;
    weight = 0.4;
    for (int i=0; i<7; i++){
                               c += weight*noise( uv );
        uv = m*uv + time;
                               weight *= 0.6;
    }
    
    //noise ridge colour
    float c1 = 0.0;
    time = TIME * speed * 3.0;
    uv = p*vec2(res.x/res.y,1.0);
                uv *= cloudscale*3.0;
    uv += q - time;
    weight = 0.4;
    for (int i=0; i<7; i++){
                               c1 += abs(weight*noise( uv ));
        uv = m*uv + time;
                               weight *= 0.6;
    }
                
    c += c1;
    
    vec3 skycolour = mix(skycolour2, skycolour1, p.y);
    vec3 cloudcolour = vec3(1.1, 1.1, 0.9) * clamp((clouddark + cloudlight*c), 0.0, 1.0);
   
    f = cloudcover + cloudalpha*f*r;
    
    vec3 result = mix(skycolour, clamp(skytint * skycolour + cloudcolour, 0.0, 1.0), clamp(f + c, 0.0, 1.0));
    
    COLOR.rgb = vec3(result); 
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/cloudscale = 1.0
shader_param/speed = 0.05
shader_param/clouddark = 0.5
shader_param/cloudlight = 0.3
shader_param/cloudcover = 0.2
shader_param/cloudalpha = 8.0
shader_param/skytint = 0.5
shader_param/skycolour1 = Vector3( 0.2, 0.4, 0.6 )
shader_param/skycolour2 = Vector3( 0.4, 0.7, 1 )
shader_param/m = Transform2D( 1.6, -1.2, 1.2, 1.6, 0, 0 )

[sub_resource type="StyleBoxFlat" id=3]
bg_color = Color( 0.776471, 0.780392, 0.780392, 1 )
expand_margin_top = 2.0

[sub_resource type="StyleBoxTexture" id=4]
content_margin_left = 5.0
content_margin_right = 4.0
texture = ExtResource( 2 )
region_rect = Rect2( 0, 0, 9, 9 )
margin_left = 2.0
margin_right = 2.0
margin_top = 2.0
margin_bottom = 2.0

[sub_resource type="StyleBoxTexture" id=5]
content_margin_left = 5.0
content_margin_right = 4.0
texture = ExtResource( 1 )
region_rect = Rect2( 0, 0, 9, 9 )
margin_left = 2.0
margin_right = 2.0
margin_top = 2.0
margin_bottom = 2.0

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

void fragment() {
	float diff_y = 0.075 * sin((10.0 * UV.x) + (TIME * 4.0));
	COLOR = texture(TEXTURE, vec2(UV.x, UV.y + diff_y));
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )

[node name="Desktop" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 7 )
__meta__ = {
"_edit_use_anchors_": false
}
battle_window = ExtResource( 6 )
reward_window = ExtResource( 9 )

[node name="Background" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.027451, 0.556863, 0.498039, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sky" type="ColorRect" parent="."]
visible = false
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
rect_min_size = Vector2( 220, 135 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Taskbar" type="Panel" parent="."]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -21.0
custom_styles/panel = SubResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Border" type="ColorRect" parent="Taskbar"]
anchor_right = 1.0
margin_top = -1.0
color = Color( 1, 0.976471, 0.909804, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button" type="Button" parent="Taskbar"]
anchor_top = 0.5
anchor_bottom = 0.5
margin_left = 2.0
margin_top = -8.5
margin_right = 58.0
margin_bottom = 8.5
focus_mode = 0
mouse_default_cursor_shape = 2
custom_styles/hover = SubResource( 4 )
custom_styles/pressed = SubResource( 4 )
custom_styles/normal = SubResource( 5 )
custom_fonts/font = ExtResource( 3 )
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_colors/font_color_hover = Color( 0, 0, 0, 1 )
enabled_focus_mode = 0
text = "Start"
icon = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Flag" type="TextureRect" parent="Taskbar/Button"]
material = SubResource( 7 )
anchor_top = 0.5
anchor_bottom = 0.5
margin_left = 2.0
margin_top = -6.5
margin_right = 19.0
margin_bottom = 6.5
texture = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HP" type="NinePatchRect" parent="Taskbar"]
anchor_left = 1.0
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_left = -58.0
margin_top = -8.5
margin_right = -2.0
margin_bottom = 8.5
texture = ExtResource( 2 )
patch_margin_left = 3
patch_margin_top = 3
patch_margin_right = 3
patch_margin_bottom = 3

[node name="CenterContainer" type="CenterContainer" parent="Taskbar/HP"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 2.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="Taskbar/HP/CenterContainer"]
margin_left = 2.0
margin_top = 5.0
margin_right = 51.0
margin_bottom = 12.0
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "30:30 HP"

[node name="States" type="Node" parent="."]

[node name="Setup" type="Node" parent="States"]
script = ExtResource( 10 )

[node name="Battle" type="Node" parent="States"]
script = ExtResource( 11 )

[node name="DelayTimer" type="Timer" parent="States/Battle"]
wait_time = 0.1
one_shot = true

[node name="Reward" type="Node" parent="States"]
script = ExtResource( 12 )

[node name="Story" type="Node" parent="States"]
script = ExtResource( 13 )

[connection signal="timeout" from="States/Battle/DelayTimer" to="States/Battle" method="_on_DelayTimer_timeout"]
